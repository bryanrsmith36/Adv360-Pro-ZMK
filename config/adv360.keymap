/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */
/* THIS FILE WAS GENERATED!
 *
 * This file was generated automatically. You may or may not want to
 * edit it directly.
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/backlight.h>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/rgb.h>

/ {
    behaviors {
        #include "macros.dtsi"
    #include "version.dtsi"

        hm: homerow_mods {
            compatible = "zmk,behavior-hold-tap";
            label = "HOMEROW_MODS";
            #binding-cells = <2>;
            tapping-term-ms = <200>;
            quick_tap_ms = <175>;
            flavor = "tap-preferred";
            bindings = <&kp>, <&kp>;
        };
    };

    combos {
        compatible = "zmk,combos";

        Open_Cell_Link {
            bindings = <&kp LEFT_BRACKET>;
            key-positions = <63>;
            require-prior-idle-ms = <0>;
            layers = <0>;
        };
    };

    macros {
        Open_Cell_Link: Open_Cell_Link {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings =
                <&none>,
                <&macro_press>,
                <&kp RCTRL>,
                <&macro_tap>,
                <&kp LEFT_BRACKET>,
                <&macro_release>,
                <&kp RIGHT_CONTROL>;

            label = "OPEN_CELL_LINK";
        };

        Horizontal_Scroll: Horizontal_Scroll {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings =
                <&none>,
                <&macro_press>,
                <&kp LEFT_CONTROL &kp LEFT_SHIFT>,
                <&macro_press>;

            label = "HORIZONTAL_SCROLL";
        };

        Close_Cell_Link: new_macro {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings =
                <&none>,
                <&macro_press>,
                <&kp F5>,
                <&macro_tap>,
                <&kp ENTER>,
                <&macro_release>,
                <&kp F5>;

            label = "NEW_MACRO";
        };

        copy: copy {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings =
                <&none>,
                <&macro_press>,
                <&kp LCTRL>,
                <&macro_tap>,
                <&kp C>,
                <&macro_release>,
                <&kp LEFT_CONTROL>;

            label = "COPY";
        };

        paste: paste {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings =
                <&none>,
                <&macro_press>,
                <&kp LEFT_CONTROL>,
                <&macro_tap>,
                <&kp V>,
                <&macro_release>,
                <&kp LEFT_CONTROL>;

            label = "PASTE";
        };

        cut: cut {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings =
                <&none>,
                <&macro_press>,
                <&kp LEFT_CONTROL>,
                <&macro_tap>,
                <&kp X>,
                <&macro_release>,
                <&kp LEFT_CONTROL>;

            label = "CUT";
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            bindings = <
&kp NUMBER_1  &kp NUMBER_2  &kp NUMBER_3    &kp EQUAL  &kp N4     &kp N5  &kp PLUS                                                                   &mo 3         &kp N6  &kp N7  &kp N8     &kp N9    &kp N0    &kp MINUS
&tog 1        &kp Q         &kp W           &kp E      &kp R      &kp T   &kp END                                                                    &kp GRAVE     &kp Y   &kp U   &kp I      &kp O     &kp P     &kp BSLH
&kp TAB       &kp A         &kp S           &kp D      &kp F      &kp G   &kp MINUS  &Close_Cell_Link  &kp HOME                &kp LGUI   &kp RCTRL  &kp CAPSLOCK  &kp H   &kp J   &kp K      &kp L     &kp SEMI  &kp SQT
&kp LSHFT     &kp Z         &kp X           &kp C      &kp V      &kp B                                &Open_Cell_Link         &kp PG_UP                           &kp N   &kp M   &kp COMMA  &kp DOT   &kp FSLH  &kp RSHFT
&kp UP        &kp DOWN      &kp LEFT_SHIFT  &kp LEFT   &kp RIGHT          &kp BSPC   &kp ENTER         &Horizontal_Scroll      &kp PG_DN  &kp ENTER  &kp SPACE             &kp UP  &kp DOWN   &kp LBKT  &kp RBKT  &mo 2
            >;
        };

        layer_keypad {
            bindings = <
&kp ESC       &kp N1          &kp N2            &kp EQUAL         &kp LEFT_PARENTHESIS  &kp RIGHT_PARENTHESIS  &trans                                                                      &mo 3      &kp N6  &kp KP_NUM  &kp KP_EQUAL  &kp KP_DIVIDE  &kp KP_MULTIPLY  &kp MINUS
&tog 2        &kp Q           &kp NUMBER_7      &kp N8            &kp N9                &kp LC(STAR)           &kp END                                                                     &none      &kp Y   &kp KP_N7   &kp KP_N8     &kp KP_N9      &kp KP_MINUS     &kp BSLH
&kp TAB       &kp N0          &kp LC(NUMBER_4)  &kp LC(NUMBER_5)  &kp NUMBER_6          &kp PLUS               &kp MINUS  &Close_Cell_Link  &kp F2                  &kp LGUI   &kp RCTRL   &none      &kp H   &kp KP_N4   &kp KP_N5     &kp KP_N6      &kp KP_PLUS      &kp SQT
&kp LSHFT     &kp Z           &kp NUMBER_1      &kp NUMBER_2      &kp NUMBER_3          &kp SLASH                                           &Open_Cell_Link         &kp PG_UP                         &kp N   &kp KP_N1   &kp KP_N2     &kp KP_N3      &kp KP_ENTER     &kp RSHFT
&kp UP_ARROW  &kp DOWN_ARROW  &kt PERIOD        &kp LEFT          &kp RIGHT                                    &kp BSPC   &kp ENTER         &Horizontal_Scroll      &kp PG_DN  &kp DELETE  &kp KP_N0          &kp UP      &kp DOWN      &kp KP_DOT     &kp RBKT         &mo 2
            >;
        };

        layer_fn {
            bindings = <
&kp F1          &kp F2          &kp F3          &kp F4          &kp F5           &kp F6  &tog 1                                                                   &mo 3   &kp F7  &kp F8  &kp F9  &kp F10  &kp F11  &kp F12
&tog 0          &trans          &trans          &trans          &trans           &trans  &none                                                                    &none   &trans  &trans  &trans  &trans   &trans   &trans
&kp TAB         &trans          &kp PLUS        &kp EQUAL       &kp MINUS        &trans  &none          &Close_Cell_Link  &trans                  &trans  &trans  &none   &trans  &trans  &trans  &trans   &trans   &trans
&kp LEFT_SHIFT  &trans          &cut            &copy           &paste           &trans                                   &Open_Cell_Link         &trans                  &trans  &trans  &trans  &trans   &trans   &trans
&kp UP_ARROW    &kp DOWN_ARROW  &kp LEFT_SHIFT  &kp LEFT_ARROW  &kp RIGHT_ARROW          &kp BACKSPACE  &kp ENTER         &Horizontal_Scroll      &trans  &trans  &trans          &trans  &trans  &trans   &trans   &trans
            >;
        };

        layer_mod {
            bindings = <
&none  &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_SEL 4  &none                                                  &trans                  &none  &none       &none       &none  &none  &none
&none  &none         &none         &none         &none         &none         &bootloader                                            &bootloader             &none  &none       &none       &none  &none  &none
&none  &none         &none         &none         &none         &none         &none        &none  &none      &bt BT_CLR  &none       &rgb_ug RGB_MEFS_CMD 5  &none  &none       &none       &none  &none  &none
&none  &none         &none         &none         &macro_ver    &none                             &none      &none                                           &none  &none       &none       &none  &none  &none
&none  &none         &none         &none         &none                       &none        &none  &none      &none       &bl BL_TOG  &rgb_ug RGB_TOG                &bl BL_INC  &bl BL_DEC  &none  &none  &none
            >;
        };
    };
};
